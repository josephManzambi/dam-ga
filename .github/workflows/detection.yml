name: RDS Compliance Detection

on:
  workflow_dispatch:
    inputs:
      regions:
        description: "Comma-separated AWS regions"
        required: true
        default: "eu-west-1"
      accounts:
        description: "Comma-separated role ARNs to assume (one per account)"
        required: true
  schedule:
    - cron: "0 3 * * *"  # daily 03:00 UTC

permissions:
  id-token: write
  contents: read

jobs:
  detect:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        region: ${{ fromJson(inputs.regions && format('["{0}"]', inputs.regions) || '["eu-west-1"]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: pip install -r requirements.txt
      - name: Parse accounts
        id: parse
        shell: bash
        run: |
          echo "accounts=$(echo '${{ inputs.accounts }}' | tr ',' '\n' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' | jq -R -s -c 'split("\n")|map(select(length>0))')" >> $GITHUB_OUTPUT
      - name: Show parsed accounts
        shell: bash
        run: |
          echo "Parsed accounts JSON: ${{ steps.parse.outputs.accounts }}"
          echo "Parsed accounts count: $(echo '${{ steps.parse.outputs.accounts }}' | jq 'length')"
      - name: Detect per account
        shell: bash
        run: |
          set -e
          mkdir -p reports
          accounts='${{ steps.parse.outputs.accounts }}'
          if [ "$(echo "$accounts" | jq 'length')" -eq 0 ]; then
            echo '::warning ::No accounts provided after parsing; skipping detection.'
          fi
          for role_arn in $(echo "$accounts" | jq -r '.[]'); do
            acct=$(echo "$role_arn" | awk -F: '{print $5}')
            echo "--- Starting detection for account $acct (role $role_arn) region ${{ matrix.region }} ---"
            set +e
            python ./dam-detection.py \
              --baseline baselines/rds-baseline.json \
              --region "${{ matrix.region }}" \
              --account-role-arn "$role_arn" \
              --check-log-groups \
              --output "reports/detect-${acct}-${{ matrix.region }}.json"
            rc=$?
            set -e
            if [ $rc -ne 0 ]; then
              echo "WARNING: detection script non-zero exit ($rc) for account $acct; continuing." >&2
            fi
          done
          echo 'Report directory listing:'
          ls -l reports || true
          echo 'Summary of report files:'
          find reports -maxdepth 1 -type f -name 'detect-*.json' -print || true
          count=$(find reports -maxdepth 1 -type f -name 'detect-*.json' | wc -l | tr -d ' ')
          if [ "$count" = "0" ]; then
            echo '::warning ::No detection report files were created. Investigate role permissions or tag selection.'
          fi
      - name: Upload reports artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detect-reports
          path: reports/
